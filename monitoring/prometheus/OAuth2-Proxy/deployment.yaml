apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy-config
  namespace: infra
data:
  oauth2-proxy.cfg: |+
    # Provider config
    provider="keycloak"
    client_id="kdashboard-client"
    client_secret="d59e1457-3e9a-449c-b2bd-dc686c6f51ad"
    provider_display_name="Keycloak"
    login_url="https://idp.nariman.kz/auth/realms/infra/protocol/openid-connect/auth"
    profile_url="https://idp.nariman.kz/auth/realms/infra/protocol/openid-connect/userinfo"
    #redeem_url="https://idp.nariman.kz/auth/realms/infra/protocol/openid-connect/token"
    validate_url="https://idp.nariman.kz/auth/realms/infra/protocol/openid-connect/userinfo"
    redirect_url="https://prometheus.nariman.kz/oauth2/callback"
    oidc_issuer_url="https://idp.nariman.kz/auth/realms/infra"
    upstreams="http://prometheus-kube-prometheus-prometheus:9090/"
    http_address="0.0.0.0:4180"
    ssl_insecure_skip_verify=true
    # Client config
    keycloak_groups="prometheusadm"
    pass_authorization_header="true"
    pass_access_token="true"
    cookie_secret="a-xNTPB_6GcAa3uf4QN1Kw=="
    cookie_secure="false"
    scope="Users"
    email_domains="*"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy-prometheus
  namespace: infra
  labels:
    app.kubernetes.io/name: oauth2-proxy-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy-prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oauth2-proxy-prometheus
    spec:
      containers:
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
          ports:
            - name: oauth2
              containerPort: 4180
          args:
            - --config=/etc/oauth2-proxy.cfg
          volumeMounts:
            - name: oauth2-proxy-config
              mountPath: /etc/oauth2-proxy.cfg
              subPath: oauth2-proxy.cfg
      volumes:
        - name: oauth2-proxy-config
          configMap:
            name: oauth2-proxy-config